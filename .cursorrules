# Atomic Design Mimarisi Kuralları

## Proje Yapısı
- src/
  - components/ - Atomic Design bileşenleri
    - atom/ - Temel UI bileşenleri
    - molecule/ - Atomların birleşiminden oluşan bileşenler
    - organism/ - Karmaşık bileşenler
    - template/ - Sayfa düzenleri
    - page/ - Sayfalar
    - screen/ - Ekranlar
  - assets/ - Resimler, fontlar, vb. statik dosyalar
  - hooks/ - Custom React hooks
  - utils/ - Yardımcı fonksiyonlar
  - helpers/ - Yardımcı sınıflar ve fonksiyonlar
  - services/ - API istekleri, veri işlemleri
  - navigation/ - Navigasyon bileşenleri
    - Root/ - Ana navigasyon
    - Main/ - Ana tab navigasyonu
    - Auth/ - Kimlik doğrulama navigasyonu
    - Home/ - Ana sayfa navigasyonu
    - Profile/ - Profil navigasyonu
  - index.ts - Ana dışa aktarım dosyası

## Bileşen Yapısı
- Tüm bileşenler atomic design prensibine göre organize edilmelidir:
  - atoms: En temel UI bileşenleri (Button, Input, Text, Icon, vb.)
  - molecules: Atomların birleşiminden oluşan bileşenler (Form, SearchBar, Card, vb.)
  - organisms: Moleküllerin ve atomların birleşiminden oluşan karmaşık bileşenler (Header, Footer, ProductList, vb.)
  - templates: Sayfa düzenini belirleyen bileşenler
  - pages: Gerçek içerikle doldurulmuş sayfalar
  - screens: Uygulama ekranları

## Dosya Yapısı
Her bileşen aşağıdaki dosya yapısına sahip olmalıdır:
```
src/components/{atom|molecule|organism|template|page|screen}/ComponentName/
  ├── ComponentName.component.tsx  # Bileşenin kendisi
  ├── ComponentName.style.ts       # Stil tanımlamaları
  ├── ComponentName.type.ts        # Tip tanımlamaları
  ├── index.ts                     # Dışa aktarım dosyası
  └── __test__/                    # Test dosyaları
      ├── ComponentName.test.tsx   # Test dosyası
      └── __snapshots__/           # Snapshot testleri
```

Her navigasyon bileşeni aşağıdaki dosya yapısına sahip olmalıdır:
```
src/navigation/{NavigationType}/
  ├── NavigationType.tsx           # Navigasyon bileşeninin kendisi
  ├── NavigationType.style.ts      # Stil tanımlamaları
  ├── NavigationType.type.ts       # Tip tanımlamaları
```

## İsimlendirme Kuralları
- Bileşen dosyaları: PascalCase.component.tsx
- Stil dosyaları: PascalCase.style.ts
- Tip dosyaları: PascalCase.type.ts
- Test dosyaları: PascalCase.test.tsx
- Dışa aktarım dosyaları: index.ts
- Hook dosyaları: useHookName.ts
- Yardımcı fonksiyonlar: camelCase.ts
- Servis dosyaları: camelCase.service.ts
- Navigasyon dosyaları: PascalCaseNavigation.tsx
- Navigasyon stil dosyaları: PascalCaseNavigation.style.ts
- Navigasyon tip dosyaları: PascalCaseNavigation.type.ts

## Kod Standartları
- Her bileşen kendi tiplerini ve stillerini içermelidir
- Bileşenler mümkün olduğunca saf (pure) ve yeniden kullanılabilir olmalıdır
- Atomlar diğer atomlara bağımlı olmamalıdır
- Moleküller sadece atomlara bağımlı olabilir
- Organizmalar atomlara ve moleküllere bağımlı olabilir
- Şablonlar, sayfalar ve ekranlar tüm bileşen türlerine bağımlı olabilir

## Stil Standartları
- Stillerin doğrudan bileşen dosyasında tanımlanması yerine ayrı .style.ts dosyalarında tanımlanması gerekmektedir
- Her bileşen, kendi özel stillerini içeren bir style dosyasına sahip olmalıdır
- Stil dosyaları, StyleSheet.create() kullanılarak oluşturulmalı ve doğrudan bileşen dosyasından import edilmelidir
- StyleSheet tanımı bileşen dosyasında değil, ayrı .style.ts dosyasında yapılmalıdır
- styles objesini export eden stil dosyaları, ilgili bileşen tarafından import edilmelidir
- Navigasyon bileşenleri için de aynı stil prensibi geçerlidir, her navigasyon bileşeni kendi stil dosyasına sahip olmalıdır

## Navigasyon Standartları
- Tüm navigasyon türleri ayrı klasörlerde organize edilmelidir
- Her navigasyon türü kendi tiplerini ve stillerini içermelidir
- Stack, Tab ve Drawer navigasyonları uygun şekilde ayrılmalıdır
- Bileşen yapılarına benzer şekilde, navigasyon yapıları da stillerini harici dosyalardan almalıdır
- Navigasyon bileşenleri, dışarıdan sağlanan bileşenlerin nasıl render edileceğine karar vermelidir
- Özel tab bar ve navigasyon tasarımları için, stil tanımları ilgili navigasyon stil dosyasına taşınmalıdır

## Test Kuralları
- Her bileşen için birim testleri yazılmalıdır
- Snapshot testleri kullanılmalıdır
- Testler, bileşenin tüm varyantlarını ve durumlarını kapsamalıdır 